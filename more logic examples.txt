0 0 0 1 0 1
0 0 1 0 1 1
1 0 0 0 1 1
1 1 1 0 0 1
1 1 1 0 1 1
1 1 0 0 0 1


add ghost cells: 
0 0 0 0 0 0 0 0
0 0 0 0 1 0 1 0
0 0 0 1 0 1 1 0
0 1 0 0 0 1 1 0
0 1 1 1 0 0 1 0
0 1 1 1 0 1 1 0 
0 1 1 0 0 0 1 0
0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0
0 0 0 0 1 0 1 0
0 0 0 0 0 0 0 0
0 1 0 1 0 0 0 0
0 0 0 1 0 0 0 0
0 0 0 0 1 1 1 0
0 1 0 1 0 1 1 0
0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 1 0 0 0 0 0
0 0 1 1 0 1 0 0
0 0 1 1 0 0 1 0
0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 1 1 0 0 0 0
0 1 0 0 1 0 0 0
0 0 1 1 1 1 1 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 1 1 0 0 0 0
0 1 0 0 0 0 0 0
0 0 1 1 1 1 0 0
0 0 0 1 1 1 0 0
0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 1 0 0 0 0 0
0 1 0 0 0 0 0 0
0 0 1 0 0 1 0 0
0 0 1 0 0 1 0 0
0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 1 1 0 0 0 0 0
0 1 1 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 1 1 0 0 0 0 0
0 1 1 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0

logic analysis

top left of a slice: neighborTopRow[same pos] + neighborTopRow[right] + localBoard[right] + localBoard[down] + localBoard[down right]
top right of a slice: neighborTopRow[same pos] + neighborTopRow[left] + localBoard[left] + localBoard[down] + localBoard[down left]
bottom left of a slice: neighborBottomRow[same pos] + neighborBottomRow[right] + localBoard[right] + localBoard[up]+ localBoard[up right]
bottom right of a slice: neighborBottomRow[same pos] + neighborBottomRow[left] + localBoard[left] + localBoard[up]+ localBoard[up left]
top non-corner of a slice: neighborTopRow[same pos] + neighborTopRow[right] + neighborTopRow[left] + localBoard[right] + localBoard[left] + localBoard[down] + localBoard[down left] + localBoard[down right]
bottom non-corner of a slice: neighborBottomRow[same pos] + neighborBottomRow[right] + neighborBottomRow[left] + localBoard[right] + localBoard[left] + localBoard[up] + localBoard[up left] + localBoard[up right]
left edge of a slice: localBoard[right] + localBoard[up] + localBoard[down] + localBoard[up right] + localBoard[down right]
right edge of a slice: localBoard[left] + localBoard[up] + localBoard[down] + localBoard[up left] + localBoard[down left]
middle of a slice: localBoard[right] + localBoard[left] + localBoard[up] + localBoard[up right] + localBoard[up left] + localBoard[down] + localBoard[down right] + localBoard[down left]

0 0 0 1 0 1
0 0 1 0 1 1
1 0 0 0 1 1

1 1 1 0 0 1
1 1 1 0 1 1
1 1 0 0 0 1

following the logic by hand for each one of my above cases, bottom half two processes

top left of bottom half:
aka [0] of P1-localProcessArr, x = 0, y = 0, N = 6, localN = 18
rowPrev = 0-1 * 6 = -6, row = -6 + 6 = 0, rowNext = 0 + 6 = 6
sumOfRowAbove = 0. rowPrev < 0 so we go into this if block. 
sumOfRowAbove += neighborRowTop[0] which should be 1. 
y does equal 0 so we don't add top left. y does not equal 5 so we DO add top right. sumAbove += neighborTopRow[1] so sumAbove = 1. 
sumOfMyRow = 0. y does equal 0 so we don't add localProcessArr[row + y - 1]  = localProcessArr[-1]
y doesn't equal 5 so we do add localProcess[0 + 0 + 1] = localProcessArr[1] = 1, so sumOfMyRow = 1. 
is rowNext >= localN aka is 6 >= 18? no. so into else block
we always add directly below: sumOfRowBelow += localProcessArr[rowNext + y] = localProcessArr[6] = 1.
y does equal 0 so ignore the bottom left. y does not equal 5 so we add it up sumOfRowBelow += localProcessArr[rowNext + y + 1] => localProcessArr[7] = 2
sum for cell = = sumAbove + sumRow + sumBelow = 1 + 1 + 2 = 4 which is correct. 

let's check the logic for cell[2][0] aka bottom left of P0 aka P0-localProcessArr[12].
x = 2, y = 0, N = 6, localN = 18
rowPrev = (2 - 1) * 6  = 6
row = 12
rowNext = 18.
is rowPrev < 0? no. so to else block. sumOfRowAbove += localProcess[rowPrev + y] => localProcess[6] = 0.
does y = 0? yes. skip adding top left. does y = 5? no, so add top right. sumOfAbove += localProcess[rowPrev+y+1] => localProcess[7] = 0. 
for current row, y does equal = so don't add to left. 
y does not equal 5, so sumOfMyRow = localProcessArr[12 + 0 + 1] = localProcess[13] =0.

sumOfRowBelow

0 0 0 0 0
